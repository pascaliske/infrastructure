# configure k3s
- name: Configure k3s
  become: true
  block:
    - name: Ensure configuration directory exists
      file:
        path: /etc/rancher/k3s
        state: directory
    - name: Create configuration file
      template:
        src: '{{ role_name }}/config.yaml.j2'
        dest: /etc/rancher/k3s/config.yaml

# install k3s
- name: Install binaries
  shell:
    cmd: '{{ item }}'
  changed_when: true
  loop:
    # renovate: datasource=github-releases depName=k3s-io/k3s
    - curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION="v1.29.1+k3s2" sh -
    - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

# fetch node register token
- name: Fetch node-token
  become: true
  block:
    - name: Wait for node-token file
      wait_for:
        path: /var/lib/rancher/k3s/server/node-token
    - name: Read node-token file
      slurp:
        path: /var/lib/rancher/k3s/server/node-token
      register: node_token_file
    - name: Store node-token
      set_fact:
        node_token: "{{ node_token_file.content | b64decode | regex_replace('\n', '') }}"
        cacheable: true

- name: Create aliases
  lineinfile:
    path: '{{ ansible_env.HOME }}/.bashrc'
    line: 'alias {{ item.alias }}="{{ item.command }}"'
    regexp: 'alias {{ item.alias }}="{{ item.command }}"$'
    insertafter: ^alias
    create: true
  loop:
    - { alias: 'kubectl', command: 'kubectl --kubeconfig {{ k3s_master_kubeconfig_system }}' }
    - { alias: 'k', command: 'kubectl --kubeconfig {{ k3s_master_kubeconfig_system }}' }
    - { alias: 'helm', command: 'helm --kubeconfig {{ k3s_master_kubeconfig_system }}' }
    - { alias: 'h', command: 'helm --kubeconfig {{ k3s_master_kubeconfig_system }}' }

# configure remote access
- name: Configure remote access
  become: true
  block:
    - name: Change ownership of system config file
      file:
        path: '{{ k3s_master_kubeconfig_system }}'
        owner: '{{ ansible_user }}'
    - name: Ensure directory exists
      file:
        path: '{{ k3s_master_kubeconfig_remote | dirname }}'
        state: directory
    - name: Duplicate config file for remote access
      copy:
        src: '{{ k3s_master_kubeconfig_system }}'
        dest: '{{ k3s_master_kubeconfig_remote }}'
        owner: '{{ ansible_user }}'
        mode: '0600'
        remote_src: true
    - name: Replace server in config file
      replace:
        path: '{{ k3s_master_kubeconfig_remote }}'
        regexp: '127\.0\.0\.1'
        replace: '{{ ansible_host }}'
    - name: Fetch config file for remote access
      fetch:
        src: '{{ k3s_master_kubeconfig_remote }}'
        dest: '{{ k3s_master_kubeconfig_local }}'
        flat: true
