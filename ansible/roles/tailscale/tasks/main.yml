# check auth key
- name: Check format of auth key
  assert:
    success_msg: The provided auth key looks valid.
    fail_msg: The provided auth key is empty or has an invalid format!
    that:
      - tailscale_auth_key is defined
      - tailscale_auth_key | length > 0
      - tailscale_auth_key is regex('^tskey-auth.*')

# configure apt
- name: Add signing key
  become: true
  apt_key:
    url: https://pkgs.tailscale.com/stable/{{ ansible_distribution | lower }}/{{ ansible_distribution_release | lower }}.gpg
    state: present
- name: Add repository
  become: true
  apt_repository:
    repo: deb https://pkgs.tailscale.com/stable/{{ ansible_distribution | lower }} {{ ansible_distribution_release | lower }} main
    filename: tailscale
    state: present

# install tailscale
- name: Install apt package
  become: true
  block:
    - name: Check if tailscale is installed
      package_facts:
        manager: auto
    - name: Unhold apt package
      dpkg_selections:
        name: tailscale
        selection: install
      when: "'tailscale' in ansible_facts.packages"
    - name: Install apt package
      apt:
        name: tailscale
        update_cache: true
        state: latest
      ignore_errors: '{{ ansible_check_mode }}'
    - name: Hold apt package
      dpkg_selections:
        name: tailscale
        selection: hold

# configure drop-in for reducing log noise
- name: Configure service drop-in
  become: true
  block:
    - name: Create service drop-in directory
      file:
        path: /etc/systemd/system/tailscaled.service.d/
        state: directory
        owner: root
        group: root
        mode: '0755'
    - name: Create service drop-in file
      template:
        src: '{{ role_name }}/tailscaled.service.j2'
        dest: /etc/systemd/system/tailscaled.service.d/override.conf
        owner: root
        group: root
        mode: '0644'
      notify: Reload systemd daemon

# check connection status
- name: Check connection
  command: tailscale status
  changed_when: false
  register: tailscale_status
  failed_when:
    - tailscale_status.rc != 0
    - "'Logged out.' not in tailscale_status.stdout"

# start-up daemon
- name: Start tailscale
  become: true
  no_log: true
  command: tailscale up --authkey={{ tailscale_auth_key }}
  when:
    - "'Logged out.' in tailscale_status.stdout"
