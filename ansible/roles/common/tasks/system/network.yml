# configure hostname
- name: Configure hostname
  become: true
  block:
    - name: Set the hostname
      command: hostnamectl set-hostname "{{ hostname_fqdn }}"
    - name: Update /etc/hosts with new hostname
      when: arm
      lineinfile:
        path: /etc/hosts
        line: "127.0.1.1\t\traspberrypi {{ hostname_fqdn }}"
        regexp: "^127.0.1.1"
        backrefs: true

# configure static ip
- name: Configure static ip
  when: common_location == 'private'
  become: true
  block:
    - name: Configure static ip via dhcpcd
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version <= "11"
      lineinfile:
        path: /etc/dhcpcd.conf
        line: '{{ item.line }}'
        regexp: '{{ item.regex }}'
      loop:
        - { regex: '^interface eth[0-9]$', line: 'interface eth0' }
        - { regex: '^static ip_address', line: "static ip_address={{ common_static_ip }}" }
        - { regex: '^static routers', line: 'static routers={{ common_static_router }}' }
        - { regex: '^static domain_name_servers', line: 'static domain_name_servers={{ common_static_dns }}' }
      notify: Restart dhcpcd
    - name: Configure static ip via nmcli
      when: ansible_distribution == 'Debian' and ansible_distribution_major_version >= "12"
      community.general.nmcli:
        state: present
        type: ethernet
        conn_name: eth0
        ip4: '{{ common_static_ip }}/24'
        gw4: '{{ common_static_router }}'
        dns4:
          - '{{ common_static_dns }}'

# configure iptables-legacy
- name: Configure iptables-legacy
  become: true
  block:
    - name: Flush iptables before changing to iptables-legacy
      iptables:
        flush: true
      changed_when: false
    - name: Changing to iptables-legacy
      alternatives:
        path: /usr/sbin/iptables-legacy
        name: iptables
      notify: Reboot
    - name: Changing to ip6tables-legacy
      alternatives:
        path: /usr/sbin/ip6tables-legacy
        name: ip6tables
      notify: Reboot
